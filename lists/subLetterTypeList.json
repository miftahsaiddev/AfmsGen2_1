{
    "template": {
        "className": "",
        "properties": {}
    },
    "considerFilterWhenGetTotal": "",
    "useSession": "",
    "responsiveMode": "",
    "rowActions": [],
    "columns": [
        {
            "filterable": true,
            "hidden": "false",
            "name": "id",
            "id": "column_0",
            "label": "ID",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "name": "c_letter_type",
            "id": "column_1",
            "label": "c_letter_type",
            "sortable": "false"
        },
        {
            "filterable": true,
            "hidden": "false",
            "renderHtml": "",
            "format": {
                "className": "",
                "properties": {}
            },
            "label": "c_sub_letter_type",
            "sortable": "false",
            "datalist_type": "column",
            "exclude_export": "",
            "name": "c_sub_letter_type",
            "width": "",
            "headerAlignment": "",
            "action": {
                "className": "org.joget.apps.datalist.lib.HyperlinkDataListAction",
                "properties": {
                    "hrefColumn": "id",
                    "hrefParam": "id",
                    "href": "form_sub_letter_type?embed=true",
                    "confirmation": "",
                    "target": "popup"
                }
            },
            "style": "",
            "id": "column_2",
            "alignment": ""
        }
    ],
    "draggabletable": "",
    "cardCollapsible": "",
    "pageSize": "0",
    "orderBy": "id",
    "description": "",
    "filters": [],
    "showDataWhenFilterSet": "",
    "pageSizeSelectorOptions": "10,20,30,40,50,100",
    "hidePageSize": "",
    "disableResponsive": "",
    "cardCollapseByDefault": "",
    "name": "List Sub Letter Type",
    "rowActionsMode": "",
    "showhidecolumns": "",
    "id": "subLetterTypeList",
    "binder": {
        "className": "org.joget.apps.datalist.lib.BeanShellDatalistBinder",
        "properties": {
            "getDataScript": "import org.joget.apps.datalist.model.DataListCollection;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.apps.datalist.model.DataListFilterQueryObject;\r\nimport java.util.regex.Pattern;\r\n \r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.commons.util.LogUtil;\r\n\r\nFormRowSet rows = new FormRowSet();\r\nDataListCollection resultList = new DataListCollection();\r\n\r\n\r\n    Connection con = null;\r\n    try {\r\n        // retrieve connection from the default datasource\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n        con = ds.getConnection();\r\n        \r\n        // execute SQL query\r\n        if(!con.isClosed()) {\r\n            PreparedStatement stmt = con.prepareStatement(\"select a.id,b.c_letter_type,a.c_sub_letter_type from app_fd_afms_sublettertype a inner join app_fd_afms_lettertype b on a.c_letter_type = b.id\");\r\n            ResultSet rs = stmt.executeQuery();\r\n            while (rs.next()) {\r\n                FormRow row = new FormRow();\r\n                row.setProperty(\"id\", (rs.getObject(\"id\") != null)?rs.getObject(\"id\").toString():\"\");\r\n                row.setProperty(\"c_letter_type\", (rs.getObject(\"c_letter_type\") != null)?rs.getObject(\"c_letter_type\").toString():\"\");\r\n                row.setProperty(\"c_sub_letter_type\", (rs.getObject(\"c_sub_letter_type\") != null)?rs.getObject(\"c_sub_letter_type\").toString():\"q\");\r\n                rows.add(row);\r\n                    \r\n           \r\n            }\r\n        }resultList.addAll(rows);\r\n    } \r\n    \r\n    catch(Exception e) {\r\n        LogUtil.error(\"Sample app - Form 1\", e, \"Error loading user data in load binder\");\r\n    } finally {\r\n        //always close the connection after used\r\n        try {\r\n            if(con != null) {\r\n                con.close();\r\n            }\r\n        } catch(SQLException e) {/* ignored */}\r\n    }\r\n \r\nDataListFilterQueryObject obj = new DataListFilterQueryObject();\r\nboolean isFiltered = false;\r\nCollection values = new ArrayList();\r\nDataListCollection filteredResultList = new DataListCollection();\r\n \r\n        for (int i = 0; i < filterQueryObjects.length; i++) {\r\n            if (filterQueryObjects[i].getValues() != null && filterQueryObjects[i].getValues().length > 0) {\r\n                values.addAll(Arrays.asList(filterQueryObjects[i].getValues()));\r\n            }\r\n             \r\n            for (s: resultList) {\r\n                String targetColumn = s.getProperty(\"username\");\r\n                for (String searchWord : values) {\r\n                    String searchWordReplaced = searchWord.replaceAll(\"%\", \"\");\r\n                    if (targetColumn.contains(searchWordReplaced)) {\r\n                        rowSet = new FormRowSet();\r\n                        rowSet.add(s);\r\n                        filteredResultList.addAll(rowSet);\r\n                        isFiltered = true;\r\n                   }\r\n                }\r\n            }\r\n            if(isFiltered){\r\n                return filteredResultList;\r\n            }\r\n        }\r\n        if (values.size() > 0){\r\n            obj.setValues((String[]) values.toArray(new String[0]));\r\n        }\r\n \r\n \r\n \r\nreturn resultList;",
            "getTotalScript": "import org.joget.apps.datalist.model.DataListCollection;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.apps.datalist.model.DataListFilterQueryObject;\r\nimport java.util.regex.Pattern;\r\n \r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.commons.util.LogUtil;\r\n\r\nFormRowSet rows = new FormRowSet();\r\nDataListCollection resultList = new DataListCollection();\r\n\r\n\r\n    Connection con = null;\r\n    try {\r\n        // retrieve connection from the default datasource\r\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\r\n        con = ds.getConnection();\r\n        \r\n        // execute SQL query\r\n        if(!con.isClosed()) {\r\n            PreparedStatement stmt = con.prepareStatement(\"select a.id,b.c_letter_type,a.c_sub_letter_type from app_fd_afms_sublettertype a inner join app_fd_afms_lettertype b on a.c_letter_type = b.id\");\r\n            ResultSet rs = stmt.executeQuery();\r\n            while (rs.next()) {\r\n                FormRow row = new FormRow();\r\n                row.setProperty(\"id\", (rs.getObject(\"id\") != null)?rs.getObject(\"id\").toString():\"\");\r\n                row.setProperty(\"c_letter_type\", (rs.getObject(\"c_letter_type\") != null)?rs.getObject(\"c_letter_type\").toString():\"\");\r\n                row.setProperty(\"c_sub_letter_type\", (rs.getObject(\"c_sub_letter_type\") != null)?rs.getObject(\"c_sub_letter_type\").toString():\"q\");                   \r\n                rows.add(row);\r\n               \r\n             \r\n                \r\n            }\r\n             resultList.addAll(rows);\r\n        }\r\n    } \r\n    \r\n    catch(Exception e) {\r\n        LogUtil.error(\"Sample app - Form 1\", e, \"Error loading user data in load binder\");\r\n    } finally {\r\n        //always close the connection after used\r\n        try {\r\n            if(con != null) {\r\n                con.close();\r\n            }\r\n        } catch(SQLException e) {/* ignored */}\r\n    }\r\n \r\nDataListFilterQueryObject obj = new DataListFilterQueryObject();\r\nboolean isFiltered = false;\r\nCollection values = new ArrayList();\r\nDataListCollection filteredResultList = new DataListCollection();\r\n \r\nfor (int i = 0; i < filterQueryObjects.length; i++) {\r\n    if (filterQueryObjects[i].getValues() != null && filterQueryObjects[i].getValues().length > 0) {\r\n        values.addAll(Arrays.asList(filterQueryObjects[i].getValues()));\r\n    }\r\n     \r\n    for (s: resultList) {\r\n        String targetColumn = s.getProperty(\"username\");\r\n        for (String searchWord : values) {\r\n            String searchWordReplaced = searchWord.replaceAll(\"%\", \"\");\r\n            Pattern pattern = Pattern.compile(searchWord);\r\n            if (targetColumn.contains(searchWordReplaced)) {\r\n                rowSet = new FormRowSet();\r\n                rowSet.add(s);\r\n                filteredResultList.addAll(rowSet);\r\n                isFiltered = true;\r\n           }\r\n        }\r\n    }\r\n    if(isFiltered){\r\n        return filteredResultList.size();\r\n    }\r\n}\r\nif (values.size() > 0){\r\n    obj.setValues((String[]) values.toArray(new String[0]));\r\n}\r\n\r\nreturn filteredResultList.size();",
            "getColumnScript": "import java.util.ArrayList;\r\nimport java.util.List;\r\nimport org.joget.apps.datalist.model.DataListColumn;\r\n \r\n \r\nList columns = new ArrayList();\r\n// add default metadata fields\r\ncolumns.add(0, new DataListColumn(\"id\", \"id\", true));\r\ncolumns.add(0, new DataListColumn(\"c_letter_type\", \"c_letter_type\", true));\r\ncolumns.add(0, new DataListColumn(\"c_sub_letter_type\", \"c_sub_letter_type\", true));\r\n \r\nreturn columns.toArray(new DataListColumn[0]);",
            "primaryKey": "id"
        }
    },
    "actions": [
        {
            "className": "org.joget.apps.datalist.lib.FormRowDeleteDataListAction",
            "id": "action_0",
            "properties": {
                "deleteFiles": "",
                "deleteGridData": "",
                "formDefId": "subLetterType",
                "deleteSubformData": "",
                "label": "Delete",
                "confirmation": "",
                "datalist_type": "action",
                "abortRelatedRunningProcesses": ""
            }
        },
        {
            "className": "org.joget.apps.datalist.lib.HyperlinkDataListAction",
            "id": "action_2",
            "properties": {
                "visible": "true",
                "hrefColumn": "",
                "hrefParam": "",
                "label": "Create",
                "href": "form_sub_letter_type?embed=true",
                "confirmation": "",
                "datalist_type": "action",
                "target": "popup"
            }
        }
    ],
    "order": ""
}